info:
  app:
    name: "trainer-workload-service"
    description: "Trainer's workload report service"
    version: "1.0.0"

server:
  port: 8082

spring:
  application:
    name: trainer-workload-service
  data:
    mongodb:
      uri: mongodb://app_user:password@mongodb:27017/workload_db
      database: workload_db
      authentication-database: admin

  cloud:
    function:
      definition: processWorkload
    stream:
      bindings:
        processWorkload-in-0:
          destination: send-workload
          group: ${spring.application.name}
          consumer:
            maxAttempts: 4
            backOffInitialInterval: 2000
            retryableExceptions:
              java.lang.UnsupportedOperationException: true
              java.lang.IllegalArgumentException: false
        processDlqMessage-in-0:
          destination: workload-dlq
          group: dlq-handler-grp
        processWorkload-out-0:
          destination: workload-processed
          producer:
            configuration:
              acks: all
      kafka:
        bindings:
          processWorkload-in-0:
            consumer:
              enableDlq: true
              dlqName: workload-dlq
        binder:
          brokers:
            - kafka:9092

logging:
  level:
    lab:
      project:
        report: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-server:8070/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
